version: '3.3'

services:
  viz:
    image: dockersamples/visualizer
    ports:
      - 9090:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elk
    deploy:
      placement:
        constraints: [node.role == manager]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    ports:
      - "9200:9200"
      - "9300:9300"
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      # Force publishing on the 'elk' overlay.
      network.publish_host: _eth0_
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.0
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    configs:
      - source: logstash_config
        target: /usr/share/logstash/config/logstash.yml
      - source: logstash_pipeline
        target: /usr/share/logstash/pipeline/logstash.conf
      - source: claroflex_pipeline
        target: /usr/share/logstash/pipeline/claroflex_pipeline.conf
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.0
    ports:
      - "5601:5601"
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  database:
    image: mysql:5.7.34
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=RrU78C98TC9qIMZd9Mv3B8h25
      - MYSQL_USER=djan_claroflex
      - MYSQL_PASSWORD=jYzNB5SGFyiav52BSmZgP1tXw
      - MYSQL_DATABASE=claroflex_v02
    volumes:
      - ./database/config/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - ./database/mysql:/var/lib/mysql
    networks:
      - elk

  claroflex-erp-django:
    image: claroflex-erp-django:latest
    ports:
      - "8088:8088"
    volumes:
      - ./claroflex-erp-django/settings/production_settings.py:/home/djan_claroflex/claroflex-erp-django/claroflex/production_settings.py
      - ./claroflex-erp-django/filebeat/filebeat.yml:/etc/filebeat/filebeat.yml
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - database


#  claroflex-gantt-chart-django:
#    image: claroflex-gantt-chart-django:latest
#    ports:
#      - "8080:8080"
#    networks:
#      - elk
#    deploy:
#      mode: replicated
#      replicas: 1

configs:

  elastic_config:
    file: ./elasticsearch/config/elasticsearch.yml
  logstash_config:
    file: ./logstash/config/logstash.yml
  logstash_pipeline:
    file: ./logstash/pipeline/logstash.conf
  claroflex_pipeline:
    file: ./logstash/pipeline/claroflex_pipeline.conf

  kibana_config:
    file: ./kibana/config/kibana.yml

networks:
  elk:
    driver: overlay
